[{"path":"/articles/LUCIDus.html","id":"about-the-lucidus-r-package","dir":"Articles","previous_headings":"","what":"About the LUCIDus R package","title":"LUCIDus: an R package to implement integrative clustering","text":"Peng et al. proposed integrative model called Latent Unknown Clustering Integrating omics Data (LUCID) (Peng et al. 2020). LUCID jointly estimates latent unknown clusters multi-omics data relate latent clusters outcome interest. demonstrated performance LUCID extensive simulation studies real data applications highlight integration genomic, exposomic metabolomic data. LUCID provides integrated clustering framework researchers, numerous downloads (18,000 times since first introduced according dlstats), applied several environmental epidemiological studies. LUCIDus R package implements integrative analysis mulit-view data using LUCID model. toolbox LUCIDus contains estimation, prediction, visualization, model selection inference. also allows missingness omics data adjustment covariates.","code":""},{"path":"/articles/LUCIDus.html","id":"introduction-to-the-lucid-model","dir":"Articles","previous_headings":"","what":"Introduction to the LUCID model","title":"LUCIDus: an R package to implement integrative clustering","text":"Genetic/environmental exposures (\\(\\mathbf{G}\\)), omics data (\\(\\mathbf{Z}\\)) outcome (\\(\\mathbf{Y}\\)) integrated using latent cluster variable, illustrated directed acyclic graph (DAG) . (screenshot method paper LUCID)  Let \\(\\mathbf{G}\\) \\(n \\times p\\) matrix columns representing genetic features/environmental exposures, rows observations; \\(\\mathbf{Z}\\) \\(n \\times m\\) matrix standardized omics data \\(\\mathbf{Y}\\) \\(n\\)-dimensional vector outcome. According DAG, assume \\(\\mathbf{G}\\), \\(\\mathbf{Z}\\) \\(\\mathbf{Y}\\) linked categorical latent variable \\(\\mathbf{X}\\), consisting \\(K\\) categories. DAG implies conditional independence. joint likelihood LUCID model formulated \\[\\begin{equation}     \\begin{aligned}     l(\\mathbf{\\Theta}) & = \\sum_{= 1}^n\\log f(\\mathbf{Z}_i, Y_i|\\mathbf{G_i}; \\mathbf{\\Theta}) \\\\         & = \\sum_{= 1}^n \\log \\sum_{j = 1}^K f(\\mathbf{Z}_i|X_i = j; \\mathbf{\\Theta}_j) f(Y_i|X_i = j; \\mathbf{\\Theta}_j) f(X_i = j|\\mathbf{G}_i; \\mathbf{\\Theta}_j)     \\end{aligned} \\end{equation}\\] \\(\\mathbf{\\Theta}\\) generic notation standing parameters LUCID. Additionally, assume \\(\\mathbf{X}\\) follows multinomial distribution conditioning \\(\\mathbf{G}\\), \\(\\mathbf{Z}\\) follows multivariate normal distribution conditioning \\(\\mathbf{X}\\) \\(\\mathbf{Y}\\) follows Gaussian (continuous outcome) Bernoulli (binary outcome) distribution conditioning \\(\\mathbf{X}\\). result, equation finalized \\[\\begin{equation}     \\begin{aligned}          l(\\mathbf{\\Theta}) = \\sum_{= 1}^n \\log \\sum_{j = 1}^k S(\\mathbf{G}_i; \\boldsymbol{\\beta}_j) \\phi(\\mathbf{Z}_i; \\boldsymbol{\\mu}_j, \\boldsymbol{\\Sigma}_j)f(Y_i;\\mathbf{\\Theta}_j)     \\end{aligned} \\end{equation}\\] \\(S\\) denotes softmax function multinomial distribution \\(\\phi\\) denotes probability density function (pdf) multivariate normal distribution. \\(\\mathbf{X}\\) observed, use Expectation-Maximization (EM) algorithm obtain maximum likelihood estimates (MLE) LUCID. denote observed data (\\(\\mathbf{G}\\), \\(\\mathbf{Z}\\) \\(\\mathbf{Y}\\)) \\(\\mathbf{D}\\). E-step, estimate responsibility : \\[\\begin{equation}     \\begin{aligned}         r_{ij} & = P(X_i = j|\\mathbf{D}, \\mathbf{\\Theta}) \\\\             & = \\frac{S(\\mathbf{G}_i; \\boldsymbol{\\beta}_j) \\phi(\\mathbf{Z}_i; \\boldsymbol{\\mu}_j, \\boldsymbol{\\Sigma}_j)f(Y_i;\\mathbf{\\Theta}_j)}{\\sum_{j = 1}^k S(\\mathbf{G}_i; \\boldsymbol{\\beta}_j) \\phi(\\mathbf{Z}_i; \\boldsymbol{\\mu}_j, \\boldsymbol{\\Sigma}_j)f(Y_i;\\mathbf{\\Theta}_j)}     \\end{aligned} \\end{equation}\\] responsibility interpreted posterior probability observation \\(\\) assigned latent cluster \\(j\\) given observed data \\(\\mathbf{D}\\). M-step, maximize expectation joint likelihood , terms \\(\\mathbf{\\Theta}\\). \\[\\begin{equation}     \\begin{aligned}         Q(\\mathbf{\\Theta}) = \\sum_{= 1}^n\\sum_{j = 1}^k r_{ij}\\log\\frac{S(\\mathbf{G}_i; \\boldsymbol{\\beta}_j)}{r_{ij}} + \\sum_{= 1}^n\\sum_{j = 1}^k r_{ij}\\log\\frac{\\phi(\\mathbf{Z}_i; \\boldsymbol{\\mu}_j, \\boldsymbol{\\Sigma}_j)}{r_{ij}} + \\sum_{= 1}^n\\sum_{j = 1}^k r_{ij}\\log\\frac{f(Y_i; \\boldsymbol{\\Theta}_j)}{r_{ij}}     \\end{aligned} \\end{equation}\\] Details EM algorithm LUDID can found Peng et al. (2020).","code":""},{"path":"/articles/LUCIDus.html","id":"functions","dir":"Articles","previous_headings":"","what":"Functions","title":"LUCIDus: an R package to implement integrative clustering","text":"lucid() calls est_lucid() tune_lucid() backend. two workhorse functions normally called directly, can useful user wants look model fitting process details.","code":""},{"path":"/articles/LUCIDus.html","id":"fit-lucid-model","dir":"Articles","previous_headings":"","what":"Fit LUCID model","title":"LUCIDus: an R package to implement integrative clustering","text":"use lucid() function fit LUCID model. User aware option useY. default, useY = TRUE, means estimate latent cluster using information exposure, omics data outcome (referred supervised LUCID). Otherwise, setting useY = FALSE, use exposure omics data estimate latent clusters (referred unsupervised LUCID). LUCID allows flexibe geometric features latent cluster, including volume, shape orientation. User can use argument modelName specify models. default, LUCID uses VVV model without putting restraints model shape. available models can found mclust::mclustModelNames section multivariate mixture. modelName = NULL, LUCID choose model based data. LUCID two options initializing EM algorithm. first method (also default method) uses mclust regression initialize parameters. second initialize EM algorithm random guess.","code":"library(LUCIDus) # use simulated data G <- sim_data$G Z <- sim_data$Z Y_normal <- sim_data$Y_normal Y_binary <- sim_data$Y_binary cov <- sim_data$Covariate  # fit LUCID model with continuous outcome fit1 <- lucid(G = G, Z = Z, Y = Y_normal, family = \"normal\", K = 2, seed = 1008)  # fit LUCID model with binary outcome fit2 <- lucid(G = G, Z = Z, Y = Y_binary, family = \"binary\", K = 2, seed = 1008)  # fit LUCID model with covariates fit3 <- lucid(G = G, Z = Z, Y = Y_binary, CoY = cov, family = \"binary\", K = 2, seed = 1008) fit4 <- lucid(G = G, Z = Z, Y = Y_binary, CoG = cov, family = \"binary\", K = 2, seed = 1008) # unsupervised lucid fit5 <- lucid(G = G, Z = Z, Y = Y_normal, family = \"normal\", K = 2, useY = FALSE, seed = 1008) # fit LUCID model with automatic selection on covariance models fit6 <- lucid(G = G, Z = Z, Y = Y_normal, family = \"normal\", K = 2, modelName = NULL, seed = 1008) # check the optimal model fit6$modelName  # fit LUCID model with a specified covariance model fit7 <- lucid(G = G, Z = Z, Y = Y_normal, family = \"normal\", K = 2, modelName = \"EII\", seed = 1008) # initialize EM algorithm by mclust and regression fit8 <- lucid(G = G, Z = Z, Y = Y_normal, family = \"normal\", K = 2, init_par = \"mclust\" , seed = 1008)  # initialize EM algorithm by random guess fit9 <- lucid(G = G, Z = Z, Y = Y_normal, family = \"normal\", K = 2, init_par = \"random\" , seed = 1008)"},{"path":"/articles/LUCIDus.html","id":"interpreting-lucid-model","dir":"Articles","previous_headings":"","what":"Interpreting LUCID model","title":"LUCIDus: an R package to implement integrative clustering","text":"summary_lucid() returns coefficient table LUCID. table divided 3 parts: (1) association outcome latent cluster; (2) association latent cluster omics data; (3) association exposure latent clsuter.","code":"# summarize LUCID model summary_lucid(fit1)"},{"path":"/articles/LUCIDus.html","id":"visualization-of-lucid","dir":"Articles","previous_headings":"","what":"Visualization of LUCID","title":"LUCIDus: an R package to implement integrative clustering","text":"use Sankey diagram visualize LUCID model. Sankey diagram, node represents variable LUCID (exposure, omics data outcome), line corresponds association two variables. color line indicates direction association (default, dark blue refers positive association light blue refers negative association) width line indicates magnitude association (large effect corresponds wider line). User can specify color palette Sankey diagram.","code":"# visualze lucid model via a Snakey diagram plot_lucid(fit1) # change node color plot_lucid(fit1, G_color = \"yellow\") plot_lucid(fit1, Z_color = \"red\")  # change link color plot_lucid(fit1, pos_link_color = \"red\", neg_link_color = \"green\")"},{"path":"/articles/LUCIDus.html","id":"regularization","dir":"Articles","previous_headings":"","what":"Regularization","title":"LUCIDus: an R package to implement integrative clustering","text":"LUCID uses regularization select variables. Regularization applied exposure omics data separately. variable selection exposures (\\(\\mathbf{G}\\)), apply lasso regression, \\[ \\beta_{lasso} = \\arg \\max_{\\beta} \\{ \\sum_{=1}^N\\sum_{j=1}^K r_{ij} \\log S(X_i=j|G_i, \\beta_j) - \\lambda_{\\beta} \\sum_{j=1}^K \\sum_{l=1}^P|\\beta_{jl}| \\} \\] omics data, cluster specific means updated \\[ \\mu_{j, lasso} = \\arg \\max_{\\mu} \\{ \\sum_{=1}^N\\sum_{j=1}^K r_{ij} \\log \\phi(Z_i=j|\\mu_j, \\Sigma_j) - \\lambda_{\\mu} \\sum_{j=1}^k\\sum_{l=1}^m|\\mu_{jl}| \\}   \\] Cluster specific variance-covariance matrices updated via inverse matrices \\(W = \\Sigma^{-1}\\). LUCID uses graphical lasso algorithm optimaize parameter , \\[ W_{j, lasso} = \\arg \\max_{\\mu} \\{ \\sum_{=1}^N\\sum_{j=1}^K r_{ij} (det (W_j) - trace(S_jW_j)) - \\lambda_{ W}\\sum_{j=1}^k \\sum_{l,o}|w_{j;l,o}| \\} \\] \\(S_j\\) empirical estimation variance-covariance matrix. User specify penalties arguments Rho_G (exposures), Rho_Z_Mu Rho_Z_Cov (omics data). recommend choose penalties based ranges : 1. Rho_G: 0 - 1 2. Rho_Z_Mu: 0 - 100 3. Rho_Z_Cov: 0 - 1 However, ranges empirical values based simulation studies. User can try different values based datasets. practice, user can pass vector penalties lucid let lucid decide optimal penalty.","code":"# use LUCID model to conduct integrated variable selection # select exposure fit10 <- lucid(G = G, Z = Z, Y = Y_normal, CoY = NULL, family = \"normal\", K = 2, seed = 1008, Rho_G = 0.1) fit11 <- lucid(G = G, Z = Z, Y = Y_normal, CoY = NULL, family = \"normal\", K = 2, seed = 1008, Rho_G = seq(0.01, 0.1, by = 0.01))  # select omics data fit12 <- lucid(G = G, Z = Z, Y = Y_normal, CoY = NULL, family = \"normal\", K = 2, seed = 1008, Rho_Z_Mu = 90, Rho_Z_Cov = 0.1, init_par = \"random\") fit13 <- lucid(G = G, Z = Z, Y = Y_normal, CoY = NULL, family = \"normal\", K = 2, seed = 1008, Rho_Z_Mu = seq(10, 50, by = 10), Rho_Z_Cov = 0.5, init_par = \"random\", verbose_tune = TRUE)"},{"path":"/articles/LUCIDus.html","id":"model-selection","dir":"Articles","previous_headings":"","what":"Model selection","title":"LUCIDus: an R package to implement integrative clustering","text":"use Bayesian Information Criteria (BIC) choose optimal number latent clusters (\\(K\\)) LUCID model.","code":"# tune lucid over a grid of K (note this function may take time to run) tune_lucid <- lucid(G = G, Z = Z, Y = Y_normal, K =2:5)"},{"path":"/articles/LUCIDus.html","id":"inference","dir":"Articles","previous_headings":"","what":"Inference","title":"LUCIDus: an R package to implement integrative clustering","text":"LUCID uses bootstrap derive confidence interval parameters, given certain confidence interval. Diagnostic plot bootstrap samples created ","code":"# conduct bootstrap resampling boot1 <- boot_lucid(G = G, Z = Z, Y = Y_normal, model = fit1, R = 100)  # use 90% CI boot2 <- boot_lucid(G = G, Z = Z, Y = Y_normal, model = fit1, R = 100, conf = 0.9) # check distribution for bootstrap replicates of the variable of interest plot(boot1$bootstrap, 1)"},{"path":"/articles/LUCIDus.html","id":"incorporating-missing-omics-data","dir":"Articles","previous_headings":"","what":"Incorporating missing omics data","title":"LUCIDus: an R package to implement integrative clustering","text":"latest version LUCID allows missingness omics data. consider 2 missing patterns omics data: (1) list-wise missing pattern subset observations measured omics data (2) sporadic missing pattern missingness completely random. implement likelihood partition (1) integrated imputation based EM algorithm (2).","code":"# fit LUCID model with block-wise missing pattern in omics data Z_miss_1 <- Z Z_miss_1[sample(1:nrow(Z), 0.3 * nrow(Z)), ] <- NA fit14 <- lucid(G = G, Z = Z_miss_1, Y = Y_normal, family = \"normal\", K = 2)  # fit LUCID model with sporadic missing pattern in omics data Z_miss_2 <- Z index <- arrayInd(sample(length(Z_miss_2), 0.3 * length(Z_miss_2)), dim(Z_miss_2)) Z_miss_2[index] <- NA fit15 <- lucid(G = G, Z = Z_miss_2, Y = Y_normal, family = \"normal\", K = 2, seed = 1008)   # check the imputed omics dataset head(fit15$Z)"},{"path":"/articles/LUCIDus.html","id":"acknowledgments","dir":"Articles","previous_headings":"","what":"Acknowledgments","title":"LUCIDus: an R package to implement integrative clustering","text":"Dr. Nikos Stratakis Dr. Jesse Goodrich Dr. Cheng Peng Dr. Leda Chatzi lab memebers","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yinqi Zhao. Author, maintainer. David V. Conti. Thesis advisor. Jesse . Goodrich. Contributor. Cheng Peng. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cheng Peng, Jun Wang, Isaac Asante, Stan Louie, Ran Jin, Lida Chatzi, Graham Casey, Duncan C Thomas, David V Conti (2019). latent unknown clustering integrating multi-omics data (LUCID) phenotypic traits. Bioinformatics, btz667. URL https://doi.org/10.1093/bioinformatics/btz667 Yinqi Zhao (2022). Using LUCIDus package. CRAN. R package version 2.2 URL https://yinqi93.github.io/LUCIDus/index.html","code":"@Article{,   title = {A latent unknown clustering integrating multi-omics data (LUCID) with phenotypic traits},   author = {{Peng} and {Cheng} and {Wang} and {Jun} and {Asante} and {Isaac} and {Louie} and {Stan} and {Jin} and {Ran} and {Chatzi} and {Lida} and {Casey} and {Graham} and {Thomas} and Duncan C and {Conti} and David V},   journal = {Bioinformatics},   year = {2019},   issn = {1367-4803},   url = {https://academic.oup.com/bioinformatics/article/36/3/842/5556107}, } @Manual{,   title = {Using the LUCIDus package},   author = {Yinqi Zhao},   publisher = {CRAN},   year = {2022},   note = {2.2.0},   url = {https://yinqi93.github.io/LUCIDus/index.html}, }"},{"path":"/index.html","id":"lucidus-integreted-clustering-with-multi-view-data","dir":"","previous_headings":"","what":"Latent Unknown Clustering Integrating Multi-view Data","title":"Latent Unknown Clustering Integrating Multi-view Data","text":"LUCIDus package implements statistical method LUCID proposed research paper Latent Unknown Clustering Integrating Multi-Omics Data (LUCID) Phenotypic Traits (Bioinformatics, 2020). LUCID conducts integrated clustering using multi-view data, including exposures, omics data /without outcome. LUCIDus features variable selection, incorporating missingness omics data, visualization LUCID model via Sankey diagram, bootstrap inference functions tuning model parameters. interested integration omic data estiamte mediator latent structures, please check Conti Lab learn .","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Latent Unknown Clustering Integrating Multi-view Data","text":"can install stable release CRAN : install development version LUCIDus GitHub :","code":"install.packages(\"LUCIDus\") # install.packages(\"devtools\") devtools::install_github(\"USCbiostats/LUCIDus\")  # install package with vignettes devtools::install_github(\"USCbiostats/LUCIDus\", build_vignettes = TRUE)"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Latent Unknown Clustering Integrating Multi-view Data","text":"Please refer tutorial.","code":""},{"path":"/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Latent Unknown Clustering Integrating Multi-view Data","text":"Dr. Lida Chatzi awesome researchers Chatzi Lab USC IMAGE Group (Supported National Cancer Institute National Institutes Health Grant P01 CA196569) Dr. Zhao Yang","code":""},{"path":"/reference/Istep_Z.html","id":null,"dir":"Reference","previous_headings":"","what":"I-step of LUCID — Istep_Z","title":"I-step of LUCID — Istep_Z","text":"Impute missing data Z maximizing likelihood given fixed parameters LUCID","code":""},{"path":"/reference/Istep_Z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"I-step of LUCID — Istep_Z","text":"","code":"Istep_Z(Z, p, mu, sigma, index)"},{"path":"/reference/Istep_Z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"I-step of LUCID — Istep_Z","text":"Z N P matrix representing omics data p N K matrix representing posterior inclusion probability  latent cluster mu M K matrix representing cluster-specific means sigma M M K array representing cluster-specific covariance index N M matrix representing missing values Z","code":""},{"path":"/reference/Istep_Z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"I-step of LUCID — Istep_Z","text":"complete dataset Z","code":""},{"path":"/reference/boot.lucid.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated function boot.lucid — boot.lucid","title":"Deprecated function boot.lucid — boot.lucid","text":"function deprecates. Please use boot_lucid instead.","code":""},{"path":"/reference/boot.lucid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated function boot.lucid — boot.lucid","text":"","code":"boot.lucid(G, Z, Y, CoG = NULL, CoY = NULL, model, conf = 0.95, R = 100)"},{"path":"/reference/boot.lucid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated function boot.lucid — boot.lucid","text":"G Exposures, numeric vector, matrix, data frame. Categorical variable  transformed dummy variables. matrix data frame, rows  represent observations columns correspond variables. Z Omics data, numeric matrix data frame. Rows correspond observations columns correspond variables. Y Outcome, numeric vector. Categorical variable allowed. Binary  outcome coded 0 1. CoG Optional, covariates adjusted estimating latent cluster. numeric vector, matrix data frame. Categorical variable transformed  dummy variables. CoY Optional, covariates adjusted estimating association  latent cluster outcome. numeric vector, matrix data frame.  Categorical variable transformed dummy variables. model LUCID model fitted est.lucid. conf numeric scalar 0 1 specify confidence level(s)  required interval(s). R integer specify number bootstrap replicates LUCID model. feasible, recommended set R >= 1000.","code":""},{"path":"/reference/boot_lucid.html","id":null,"dir":"Reference","previous_headings":"","what":"Inference of LUCID model based on bootstrap resampling — boot_lucid","title":"Inference of LUCID model based on bootstrap resampling — boot_lucid","text":"Generate R bootstrap replicates LUCID parameters  derive confidence interval (CI) base bootstrap. Bootstrap replicates  generated based nonparameteric resampling, implemented ordinary  method codeboot::boot function.","code":""},{"path":"/reference/boot_lucid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inference of LUCID model based on bootstrap resampling — boot_lucid","text":"","code":"boot_lucid(G, Z, Y, CoG = NULL, CoY = NULL, model, conf = 0.95, R = 100)"},{"path":"/reference/boot_lucid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inference of LUCID model based on bootstrap resampling — boot_lucid","text":"G Exposures, numeric vector, matrix, data frame. Categorical variable  transformed dummy variables. matrix data frame, rows  represent observations columns correspond variables. Z Omics data, numeric matrix data frame. Rows correspond observations columns correspond variables. Y Outcome, numeric vector. Categorical variable allowed. Binary  outcome coded 0 1. CoG Optional, covariates adjusted estimating latent cluster. numeric vector, matrix data frame. Categorical variable transformed  dummy variables. CoY Optional, covariates adjusted estimating association  latent cluster outcome. numeric vector, matrix data frame.  Categorical variable transformed dummy variables. model LUCID model fitted est.lucid. conf numeric scalar 0 1 specify confidence level(s)  required interval(s). R integer specify number bootstrap replicates LUCID model. feasible, recommended set R >= 1000.","code":""},{"path":"/reference/boot_lucid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inference of LUCID model based on bootstrap resampling — boot_lucid","text":"list, containing following components: beta effect estimate exposure mu cluster-specific mean omics feature gamma effect estiamte association btween latent cluster  outcome bootstrap boot object returned boot:boot","code":""},{"path":"/reference/boot_lucid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inference of LUCID model based on bootstrap resampling — boot_lucid","text":"","code":"if (FALSE) { # use simulated data G <- sim_data$G Z <- sim_data$Z Y_normal <- sim_data$Y_normal  # fit lucid model fit1 <- est_lucid(G = G, Z = Z, Y = Y_normal, family = \"normal\", K = 2,  seed = 1008)  # conduct bootstrap resampling boot1 <- boot_lucid(G = G, Z = Z, Y = Y_normal, model = fit1, R = 100)  # check distribution for bootstrap replicates of the variable of interest plot(boot1$bootstrap, 1)  # use 90% CI boot2 <- boot_lucid(G = G, Z = Z, Y = Y_normal, model = fit1, R = 100, conf = 0.9) }"},{"path":"/reference/check_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Check missing patterns in omics data Z — check_na","title":"Check missing patterns in omics data Z — check_na","text":"Check missing patterns omics data Z","code":""},{"path":"/reference/check_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check missing patterns in omics data Z — check_na","text":"","code":"check_na(Z)"},{"path":"/reference/check_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check missing patterns in omics data Z — check_na","text":"Z data matrix representing omics data","code":""},{"path":"/reference/check_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check missing patterns in omics data Z — check_na","text":"1. index:indeces missing values omics data 2. indicator_na: missing pattern observation 3. impute_flag: - flag initialize imputation. happens sporadic missing pattern observed","code":""},{"path":"/reference/est.lucid.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated function est.lucid — est.lucid","title":"Deprecated function est.lucid — est.lucid","text":"function deprecates. Please use est_lucid instead.","code":""},{"path":"/reference/est.lucid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated function est.lucid — est.lucid","text":"","code":"est.lucid(   G,   Z,   Y,   CoG = NULL,   CoY = NULL,   K = 2,   family = c(\"normal\", \"binary\"),   useY = TRUE,   tol = 0.001,   max_itr = 1000,   max_tot.itr = 10000,   Rho_G = 0,   Rho_Z_Mu = 0,   Rho_Z_Cov = 0,   modelName = \"VVV\",   seed = 123,   init_impute = c(\"mclust\", \"lod\"),   init_par = c(\"mclust\", \"random\"),   verbose = FALSE )"},{"path":"/reference/est.lucid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated function est.lucid — est.lucid","text":"G Exposures, numeric vector, matrix, data frame. Categorical variable  transformed dummy variables. matrix data frame, rows  represent observations columns correspond variables. Z Omics data, numeric matrix data frame. Rows correspond observations columns correspond variables. Y Outcome, numeric vector. Categorical variable allowed. Binary  outcome coded 0 1. CoG Optional, covariates adjusted estimating latent cluster. numeric vector, matrix data frame. Categorical variable transformed  dummy variables. CoY Optional, covariates adjusted estimating association  latent cluster outcome. numeric vector, matrix data frame.  Categorical variable transformed dummy variables. K Number latent clusters. integer greater equal 2. User  can use lucid determine optimal number latent clusters. family Distribution outcome. continuous outcome, use \"normal\";  binary outcome, use \"binary\". Default \"normal\". useY Flag include information outcome estimating latent  cluster. Default TRUE. tol Tolerance convergence EM algorithm. Default 1e-3. max_itr Max number iterations EM algorithm. max_tot.itr Max number total iterations est_lucid function. est_lucid may conduct EM algorithm multiple times algorithm  fails converge. Rho_G scalar. parameter LASSO penalty regularize exposures. user wants tune penalty, use wrapper  function lucid Rho_Z_Mu scalar. parameter LASSO penalty  regularize cluster-specific means omics data (Z). user wants tune  penalty, use wrapper function lucid Rho_Z_Cov scalar. parameter graphical LASSO penalty estimate sparse cluster-specific variance-covariance matrices omics  data (Z). user wants tune penalty, use wrapper function lucid modelName variance-covariance structure omics data.  See mclust::mclustModelNames details. seed integer initialize EM algorithm imputing missing values. Default 123. init_impute Method initialize imputation missing values  LUCID. \"mclust\" use mclust:imputeData implement EM Algorithm  Unrestricted General Location Model impute missing values omics  data; lod initialize imputation via relacing missing values LOD / sqrt(2). LOD determined minimum variable omics data. init_par Method initialize EM algorithm. \"mclust\" use mclust model initialize parameters; \"random\" initialize parameters uniform  distribution. verbose flag indicates whether detailed information iteration EM algorithm printed console. Default FALSE.","code":""},{"path":"/reference/est_lucid.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit LUCID model to conduct integrated clustering — est_lucid","title":"Fit LUCID model to conduct integrated clustering — est_lucid","text":"Latent Unknown Clustering Integrated Data (LUCID) performs  integrative clustering using multi-view data. LUCID model estimated via EM  algorithm model-based clustering. also features variable selection, integrated imputation, bootstrap inference visualization via Sankey diagram.","code":""},{"path":"/reference/est_lucid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit LUCID model to conduct integrated clustering — est_lucid","text":"","code":"est_lucid(   G,   Z,   Y,   CoG = NULL,   CoY = NULL,   K = 2,   family = c(\"normal\", \"binary\"),   useY = TRUE,   tol = 0.001,   max_itr = 1000,   max_tot.itr = 10000,   Rho_G = 0,   Rho_Z_Mu = 0,   Rho_Z_Cov = 0,   modelName = NULL,   seed = 123,   init_impute = c(\"mclust\", \"lod\"),   init_par = c(\"mclust\", \"random\"),   verbose = FALSE )"},{"path":"/reference/est_lucid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit LUCID model to conduct integrated clustering — est_lucid","text":"G Exposures, numeric vector, matrix, data frame. Categorical variable  transformed dummy variables. matrix data frame, rows  represent observations columns correspond variables. Z Omics data, numeric matrix data frame. Rows correspond observations columns correspond variables. Y Outcome, numeric vector. Categorical variable allowed. Binary  outcome coded 0 1. CoG Optional, covariates adjusted estimating latent cluster. numeric vector, matrix data frame. Categorical variable transformed  dummy variables. CoY Optional, covariates adjusted estimating association  latent cluster outcome. numeric vector, matrix data frame.  Categorical variable transformed dummy variables. K Number latent clusters. integer greater equal 2. User  can use lucid determine optimal number latent clusters. family Distribution outcome. continuous outcome, use \"normal\";  binary outcome, use \"binary\". Default \"normal\". useY Flag include information outcome estimating latent  cluster. Default TRUE. tol Tolerance convergence EM algorithm. Default 1e-3. max_itr Max number iterations EM algorithm. max_tot.itr Max number total iterations est_lucid function. est_lucid may conduct EM algorithm multiple times algorithm  fails converge. Rho_G scalar. parameter LASSO penalty regularize exposures. user wants tune penalty, use wrapper  function lucid Rho_Z_Mu scalar. parameter LASSO penalty  regularize cluster-specific means omics data (Z). user wants tune  penalty, use wrapper function lucid Rho_Z_Cov scalar. parameter graphical LASSO penalty estimate sparse cluster-specific variance-covariance matrices omics  data (Z). user wants tune penalty, use wrapper function lucid modelName variance-covariance structure omics data.  See mclust::mclustModelNames details. seed integer initialize EM algorithm imputing missing values. Default 123. init_impute Method initialize imputation missing values  LUCID. \"mclust\" use mclust:imputeData implement EM Algorithm  Unrestricted General Location Model impute missing values omics  data; lod initialize imputation via relacing missing values LOD / sqrt(2). LOD determined minimum variable omics data. init_par Method initialize EM algorithm. \"mclust\" use mclust model initialize parameters; \"random\" initialize parameters uniform  distribution. verbose flag indicates whether detailed information iteration EM algorithm printed console. Default FALSE.","code":""},{"path":"/reference/est_lucid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit LUCID model to conduct integrated clustering — est_lucid","text":"list contains several features LUCID, including: pars Estimates parameters LUCID, including beta (effect  exposure), mu (cluster-specific mean omics data), sigma (cluster-specific  variance-covariance matrix omics data) gamma (effect estimate association latent cluster outcome) K Number latent cluster modelName Geometric model estiamte variance-covariance matrix  omics data likelihood log likelihood LUCID model post.p Posterior inclusion probability (PIP) assigning observation latent cluster j Z missing values observed, complet dataset omics data missing values imputed LUCID","code":""},{"path":"/reference/est_lucid.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit LUCID model to conduct integrated clustering — est_lucid","text":"Cheng Peng, Jun Wang, Isaac Asante, Stan Louie, Ran Jin, Lida Chatzi,  Graham Casey, Duncan C Thomas, David V Conti, Latent Unknown Clustering  Integrating Multi-Omics Data (LUCID) Phenotypic Traits, Bioinformatics, btz667, https://doi.org/10.1093/bioinformatics/btz667.","code":""},{"path":"/reference/est_lucid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit LUCID model to conduct integrated clustering — est_lucid","text":"","code":"if (FALSE) { # use simulated data G <- sim_data$G Z <- sim_data$Z Y_normal <- sim_data$Y_normal Y_binary <- sim_data$Y_binary cov <- sim_data$Covariate  # fit LUCID model with continuous outcome fit1 <- est_lucid(G = G, Z = Z, Y = Y_normal, family = \"normal\", K = 2,  seed = 1008)  # fit LUCID model with block-wise missing pattern in omics data Z_miss_1 <- Z Z_miss_1[sample(1:nrow(Z), 0.3 * nrow(Z)), ] <- NA fit2 <- est_lucid(G = G, Z = Z_miss_1, Y = Y_normal, family = \"normal\", K = 2)  # fit LUCID model with sporadic missing pattern in omics data Z_miss_2 <- Z index <- arrayInd(sample(length(Z_miss_2), 0.3 * length(Z_miss_2)), dim(Z_miss_2)) Z_miss_2[index] <- NA # initialize imputation by imputing  fit3 <- est_lucid(G = G, Z = Z_miss_2, Y = Y_normal, family = \"normal\",  K = 2, seed = 1008, init_impute = \"lod\")  LOD # initialize imputation by mclust fit4 <- est_lucid(G = G, Z = Z_miss_2, Y = Y, family = \"normal\", K = 2,  seed = 123, init_impute = \"mclust\")   # fit LUCID model with binary outcome fit5 <- est_lucid(G = G, Z = Z, Y = Y_binary, family = \"binary\", K = 2, seed = 1008)  # fit LUCID model with covariates fit6 <- est_lucid(G = G, Z = Z, Y = Y_binary, CoY = cov, family = \"binary\",  K = 2, seed = 1008)  # use LUCID model to conduct integrated variable selection # select exposure fit6 <- est_lucid(G = G, Z = Z, Y = Y_normal, CoY = NULL, family = \"normal\",  K = 2, seed = 1008, Rho_G = 0.1) # select omics data fit7 <- est_lucid(G = G, Z = Z, Y = Y_normal, CoY = NULL, family = \"normal\", K = 2, seed = 1008, Rho_Z_Mu = 90, Rho_Z_Cov = 0.1, init_par = \"random\")  }"},{"path":"/reference/fill_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute missing data by optimizing the likelihood function — fill_data","title":"Impute missing data by optimizing the likelihood function — fill_data","text":"Impute missing data optimizing likelihood function","code":""},{"path":"/reference/fill_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute missing data by optimizing the likelihood function — fill_data","text":"","code":"fill_data(obs, mu, sigma, p, index)"},{"path":"/reference/fill_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute missing data by optimizing the likelihood function — fill_data","text":"obs vector length M mu matrix size M x K sigma matrix size M x M x K p vector length K index vector length M, indicating whether value missing  raw data","code":""},{"path":"/reference/fill_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute missing data by optimizing the likelihood function — fill_data","text":"observation updated imputed value","code":""},{"path":"/reference/gen_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"generate bootstrp ci (normal, basic and percentile) — gen_ci","title":"generate bootstrp ci (normal, basic and percentile) — gen_ci","text":"generate bootstrp ci (normal, basic percentile)","code":""},{"path":"/reference/gen_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate bootstrp ci (normal, basic and percentile) — gen_ci","text":"","code":"gen_ci(x, conf = 0.95)"},{"path":"/reference/gen_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate bootstrp ci (normal, basic and percentile) — gen_ci","text":"x object return boot function conf numeric scalar 0 1 specify confidence level(s)  required interval(s).","code":""},{"path":"/reference/gen_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate bootstrp ci (normal, basic and percentile) — gen_ci","text":"matrix, first column t0 statistic original model","code":""},{"path":"/reference/helix_data.html","id":null,"dir":"Reference","previous_headings":"","what":"HELIX data — helix_data","title":"HELIX data — helix_data","text":"Human Early-Life Exposome (HELIX) project multi-center  research project aims characterize early-life environmental exposures associate omics biomarkers child health outcomes (Vrijheid, 2014. doi: 10.1289/ehp.1307204). used subset HELIX data Exposome Data Challenge 2021 (hold ISGlobal) example illustrate LUCID model.","code":""},{"path":"/reference/helix_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HELIX data — helix_data","text":"","code":"helix_data"},{"path":"/reference/helix_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"HELIX data — helix_data","text":"list 4 matrices corresponding exposures (G), omics data (Z), outcome (Y) covariates (CoY) exposure 8 exposures environmental pollutants. Variables end     m represent maternal exposures; end c represent children exposures omics 10 proteins outcome continuous outcome BMI-z score based standard,     binary outcome body mass index categories 6-11 years old based      reference (0: Thinness Normal; 1: Overweight Obese) covariate 3 covariates including mother's bmi, child sex, maternal     age","code":""},{"path":"/reference/lucid.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a lucid model for integrated analysis on exposure, outcome and multi-omics data — lucid","title":"Fit a lucid model for integrated analysis on exposure, outcome and multi-omics data — lucid","text":"Fit lucid model integrated analysis exposure, outcome multi-omics data","code":""},{"path":"/reference/lucid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a lucid model for integrated analysis on exposure, outcome and multi-omics data — lucid","text":"","code":"lucid(   G,   Z,   Y,   CoG = NULL,   CoY = NULL,   family = \"normal\",   K = 2,   Rho_G = 0,   Rho_Z_Mu = 0,   Rho_Z_Cov = 0,   verbose_tune = FALSE,   ... )"},{"path":"/reference/lucid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a lucid model for integrated analysis on exposure, outcome and multi-omics data — lucid","text":"G Exposures, numeric vector, matrix, data frame. Categorical variable  transformed dummy variables. matrix data frame, rows  represent observations columns correspond variables. Z Omics data, numeric matrix data frame. Rows correspond observations columns correspond variables. Y Outcome, numeric vector. Categorical variable allowed. Binary  outcome coded 0 1. CoG Optional, covariates adjusted estimating latent cluster. numeric vector, matrix data frame. Categorical variable transformed  dummy variables. CoY Optional, covariates adjusted estimating association  latent cluster outcome. numeric vector, matrix data frame.  Categorical variable transformed dummy variables. family Distribution outcome. continuous outcome, use \"normal\";  binary outcome, use \"binary\". Default \"normal\". K Number latent clusters (greater equal 2).  Either integer vector integer. K vector, model selection K performed. Rho_G scalar vector. parameter LASSO penalty regularize exposures. vector, lucid call tune_lucid conduct model selection variable selection. User can try penalties 0 1. Rho_Z_Mu scalar vector. parameter LASSO penalty  regularize cluster-specific means omics data (Z). vector,  lucid call tune_lucid conduct model selection  variable selection. User can try penalties 1 100. Rho_Z_Cov scalar vector. parameter graphical LASSO penalty estimate sparse cluster-specific variance-covariance matrices omics  data (Z). vector, lucid call tune_lucid conduct model selection variable selection. User can try penalties 0 1. verbose_tune flag print details tuning process. ... parameters passed est_lucid","code":""},{"path":"/reference/lucid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a lucid model for integrated analysis on exposure, outcome and multi-omics data — lucid","text":"optimal lucid model","code":""},{"path":"/reference/lucid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a lucid model for integrated analysis on exposure, outcome and multi-omics data — lucid","text":"","code":"if (FALSE) { G <- sim_data$G Z <- sim_data$Z Y_normal <- sim_data$Y_normal Y_binary <- sim_data$Y_binary cov <- sim_data$Covariate  # fit lucid model fit1 <- lucid(G = G, Z = Z, Y = Y_normal, family = \"normal\") fit2 <- lucid(G = G, Z = Z, Y = Y_binary, family = \"binary\", useY = FALSE)  # including covariates fit3 <- lucid(G = G, Z = Z, Y = Y_binary, family = \"binary\", CoG = cov) fit4 <- lucid(G = G, Z = Z, Y = Y_binary, family = \"binary\", CoY = cov)  # tune K fit5 <- lucid(G = G, Z = Z, Y = Y_binary, family = \"binary\", K = 2:5)  # variable selection fit6 <- lucid(G = G, Z = Z, Y = Y_binary, family = \"binary\", Rho_G = seq(0.01, 0.1, by = 0.01)) fit7 <- lucid(G = G, Z = Z, Y = Y_binary, family = \"binary\",  Rho_Z_Mu = seq(10, 100, by = 10), Rho_Z_Cov = 0.5, init_par = \"random\", verbose_tune = TRUE) }"},{"path":"/reference/plot_lucid.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize LUCID model through a Sankey diagram — plot_lucid","title":"Visualize LUCID model through a Sankey diagram — plot_lucid","text":"Sankey diagram, node either represents variable (exposure, omics outcome) latent cluster. line represents association. color node represents variable type, either exposure, omics outcome. width line represents effect size certain association; color line represents direction certain association.","code":""},{"path":"/reference/plot_lucid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize LUCID model through a Sankey diagram — plot_lucid","text":"","code":"plot_lucid(   x,   G_color = \"dimgray\",   X_color = \"#eb8c30\",   Z_color = \"#2fa4da\",   Y_color = \"#afa58e\",   pos_link_color = \"#67928b\",   neg_link_color = \"#d1e5eb\",   fontsize = 7 )"},{"path":"/reference/plot_lucid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize LUCID model through a Sankey diagram — plot_lucid","text":"x LUCID model fitted est_lucid G_color Color node exposure X_color Color node latent cluster Z_color Color node omics data Y_color Color node outcome pos_link_color Color link corresponds positive association neg_link_color Color link corresponds negative association fontsize Font size annotation","code":""},{"path":"/reference/plot_lucid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize LUCID model through a Sankey diagram — plot_lucid","text":"DAG graph created sankeyNetwork","code":""},{"path":"/reference/plot_lucid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize LUCID model through a Sankey diagram — plot_lucid","text":"","code":"if (FALSE) { # prepare data G <- sim_data$G Z <- sim_data$Z Y_normal <- sim_data$Y_normal Y_binary <- sim_data$Y_binary cov <- sim_data$Covariate  # plot lucid model fit1 <- est_lucid(G = G, Z = Z, Y = Y_normal, CoY = NULL, family = \"normal\",  K = 2, seed = 1008) plot_lucid(fit1)  # change node color plot_lucid(fit1, G_color = \"yellow\") plot_lucid(fit1, Z_color = \"red\")  # change link color plot_lucid(fit1, pos_link_color = \"red\", neg_link_color = \"green\") }"},{"path":"/reference/predict_lucid.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict cluster assignment and outcome based on LUCID model — predict_lucid","title":"Predict cluster assignment and outcome based on LUCID model — predict_lucid","text":"Predict cluster assignment outcome based LUCID model","code":""},{"path":"/reference/predict_lucid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict cluster assignment and outcome based on LUCID model — predict_lucid","text":"","code":"predict_lucid(model, G, Z, Y = NULL, CoG = NULL, CoY = NULL, response = TRUE)"},{"path":"/reference/predict_lucid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict cluster assignment and outcome based on LUCID model — predict_lucid","text":"model model fitted returned est_lucid G Exposures, numeric vector, matrix, data frame. Categorical variable  transformed dummy variables. matrix data frame, rows  represent observations columns correspond variables. Z Omics data, numeric matrix data frame. Rows correspond observations columns correspond variables. Y Outcome, numeric vector. Categorical variable allowed. Binary  outcome coded 0 1. CoG Optional, covariates adjusted estimating latent cluster. numeric vector, matrix data frame. Categorical variable transformed  dummy variables. CoY Optional, covariates adjusted estimating association  latent cluster outcome. numeric vector, matrix data frame.  Categorical variable transformed dummy variables. response TRUE, predicting binary outcome, response returned. FALSE, linear predictor returned.","code":""},{"path":"/reference/predict_lucid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict cluster assignment and outcome based on LUCID model — predict_lucid","text":"list contains predicted latent cluster outcome observation","code":""},{"path":"/reference/predict_lucid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict cluster assignment and outcome based on LUCID model — predict_lucid","text":"","code":"if (FALSE) { # prepare data G <- sim_data$G Z <- sim_data$Z Y_normal <- sim_data$Y_normal  # fit lucid model fit1 <- est_lucid(G = G, Z = Z, Y = Y_normal, K = 2, family = \"normal\")  # prediction on training set pred1 <- predict_lucid(model = fit1, G = G, Z = Z, Y = Y_normal) pred2 <- predict_lucid(model = fit1, G = G, Z = Z) }"},{"path":"/reference/print.lucid.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the output of est_lucid — print.lucid","title":"Print the output of est_lucid — print.lucid","text":"Print output est_lucid","code":""},{"path":"/reference/print.lucid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the output of est_lucid — print.lucid","text":"","code":"# S3 method for lucid print(x, ...)"},{"path":"/reference/print.lucid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the output of est_lucid — print.lucid","text":"x object LUCID model, returned est_lucid ... arguments passed print","code":""},{"path":"/reference/print.sumlucid.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the output of LUCID in a nicer table — print.sumlucid","title":"Print the output of LUCID in a nicer table — print.sumlucid","text":"Print output LUCID nicer table","code":""},{"path":"/reference/print.sumlucid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the output of LUCID in a nicer table — print.sumlucid","text":"","code":"# S3 method for sumlucid print(x, ...)"},{"path":"/reference/print.sumlucid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the output of LUCID in a nicer table — print.sumlucid","text":"x object returned summary_lucid ... parameters passed print","code":""},{"path":"/reference/sim_data.html","id":null,"dir":"Reference","previous_headings":"","what":"A simulated dataset for LUCID — sim_data","title":"A simulated dataset for LUCID — sim_data","text":"example dataset illustrate LUCID model. simulated assuming 2 latent clusters data. assume exposures  associated latent cluster ultimately affects PFAS concentration liver injury children. latent clusters also characterized  differential levels metabolites.","code":""},{"path":"/reference/sim_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simulated dataset for LUCID — sim_data","text":"","code":"sim_data"},{"path":"/reference/sim_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A simulated dataset for LUCID — sim_data","text":"list 5 matrices corresponding exposures (G), omics data (Z), continuous outcome, binary outcome 2 covariates (can used either  CoX CoY). matrice contains 2000 observations. G 10 exposures Z 10 metabolites Y_normal Outcome, PFAS concentration children Y_bninary Bianry outcome, liver injury status Covariates 2 continous covariates, can treated either CoX                        CoY X Latent clusters","code":""},{"path":"/reference/summary_lucid.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize results of LUCID model — summary_lucid","title":"Summarize results of LUCID model — summary_lucid","text":"Summarize results LUCID model","code":""},{"path":"/reference/summary_lucid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize results of LUCID model — summary_lucid","text":"","code":"summary_lucid(object, boot.se = NULL)"},{"path":"/reference/summary_lucid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize results of LUCID model — summary_lucid","text":"object LUCID model fitted est_lucid boot.se object returned boot_lucid,  contains bootstrap confidence intervals","code":""},{"path":"/reference/summary_lucid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize results of LUCID model — summary_lucid","text":"","code":"if (FALSE) { # use simulated data G <- sim_data$G Z <- sim_data$Z Y_normal <- sim_data$Y_normal  # fit lucid model fit1 <- est_lucid(G = G, Z = Z, Y = Y_normal, family = \"normal\", K = 2,  seed = 1008)  # conduct bootstrap resampling boot1 <- boot_lucid(G = G, Z = Z, Y = Y_normal, model = fit1, R = 100)  # summarize lucid model summary_lucid(fit1)  # summarize lucid model with bootstrap CIs summary_lucid(fit1, boot.se = boot1) }"},{"path":"/reference/tune_lucid.html","id":null,"dir":"Reference","previous_headings":"","what":"A wrapper function to perform model selection for LUCID — tune_lucid","title":"A wrapper function to perform model selection for LUCID — tune_lucid","text":"Given grid K L1 penalties (incluing Rho_G, Rho_Z_mu Rho_Z_Cov), fit LUCID model combinations K L1 penalties  determine optimal penalty.","code":""},{"path":"/reference/tune_lucid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A wrapper function to perform model selection for LUCID — tune_lucid","text":"","code":"tune_lucid(   G,   Z,   Y,   CoG = NULL,   CoY = NULL,   family = \"normal\",   K = 2:5,   Rho_G = 0,   Rho_Z_Mu = 0,   Rho_Z_Cov = 0,   ... )"},{"path":"/reference/tune_lucid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A wrapper function to perform model selection for LUCID — tune_lucid","text":"G Exposures, numeric vector, matrix, data frame. Categorical variable  transformed dummy variables. matrix data frame, rows  represent observations columns correspond variables. Z Omics data, numeric matrix data frame. Rows correspond observations columns correspond variables. Y Outcome, numeric vector. Categorical variable allowed. Binary  outcome coded 0 1. CoG Optional, covariates adjusted estimating latent cluster. numeric vector, matrix data frame. Categorical variable transformed  dummy variables. CoY Optional, covariates adjusted estimating association  latent cluster outcome. numeric vector, matrix data frame.  Categorical variable transformed dummy variables. family Distribution outcome. continuous outcome, use \"normal\";  binary outcome, use \"binary\". Default \"normal\". K Number latent clusters. integer greater equal 2. K vector, model selection K performed Rho_G scalar vector. parameter LASSO penalty regularize exposures. vector, tune_lucid conduct model selection variable selection. User can try penalties 0 1. Rho_Z_Mu scalar vector. parameter LASSO penalty  regularize cluster-specific means omics data (Z). vector,  tune_lucid conduct model selection  variable selection. User can try penalties 1 100. Rho_Z_Cov scalar vector. parameter graphical LASSO penalty estimate sparse cluster-specific variance-covariance matrices omics  data (Z). vector, tune_lucid conduct model selection variable selection. User can try penalties 0 1. ... parameters passed est_lucid","code":""},{"path":"/reference/tune_lucid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A wrapper function to perform model selection for LUCID — tune_lucid","text":"list: best_model best model different combination tuning parameters tune_list data frame contains combination tuning parameters c orresponding BIC res_model list LUCID models corresponding combination  tuning parameters","code":""},{"path":"/reference/tune_lucid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A wrapper function to perform model selection for LUCID — tune_lucid","text":"","code":"if (FALSE) { # use simulated data G <- sim_data$G Z <- sim_data$Z Y_normal <- sim_data$Y_normal  # find the optimal model over the grid of K tune_K <- tune_lucid(G = G, Z = Z, Y = Y_normal, useY = FALSE, tol = 1e-3,  seed = 1, K = 2:5)  # tune penalties tune_Rho_G <- tune_lucid(G = G, Z = Z, Y = Y_normal, useY = FALSE, tol = 1e-3, seed = 1, K = 2, Rho_G = c(0.1, 0.2, 0.3, 0.4)) tune_Rho_Z_Mu <- tune_lucid(G = G, Z = Z, Y = Y_normal, useY = FALSE, tol = 1e-3, seed = 1, K = 2, Rho_Z_Mu = c(10, 20, 30, 40)) tune_Rho_Z_Cov <- tune_lucid(G = G, Z = Z, Y = Y_normal, useY = FALSE, tol = 1e-3, seed = 1, K = 2, Rho_Z_Cov = c(0.1, 0.2, 0.3))  }"},{"path":"/news/index.html","id":"lucidus-22","dir":"Changelog","previous_headings":"","what":"LUCIDus 2.2","title":"LUCIDus 2.2","text":"CRAN release: 2022-08-07","code":""},{"path":"/news/index.html","id":"new-features-2-2","dir":"Changelog","previous_headings":"","what":"New features","title":"LUCIDus 2.2","text":"New function lucid: estimation function integrating model variable selection. recommend user use new function estimating LUCID models. calls workhorse functions est_lucid tune_lucid back-end. ## Major changes Rename est.lucid boot.lucid est_lucid boot_lucid. Update vignette accordingly. Use mclust choose optimal geometric model omics data Z default.","code":""},{"path":"/news/index.html","id":"lucidus-215-2","dir":"Changelog","previous_headings":"","what":"LUCIDus 2.1.5-2","title":"LUCIDus 2.1.5-2","text":"CRAN release: 2022-06-01","code":""},{"path":"/news/index.html","id":"minor-bugs-fixed-2-1-5-2","dir":"Changelog","previous_headings":"","what":"Minor bugs fixed","title":"LUCIDus 2.1.5-2","text":"Update package dependencies Fix bugs running examples","code":""},{"path":"/news/index.html","id":"lucidus-215-1","dir":"Changelog","previous_headings":"","what":"LUCIDus 2.1.5-1","title":"LUCIDus 2.1.5-1","text":"CRAN release: 2022-04-06","code":""},{"path":"/news/index.html","id":"minor-bugs-fixed-2-1-5-1","dir":"Changelog","previous_headings":"","what":"Minor bugs fixed","title":"LUCIDus 2.1.5-1","text":"Fix bugs running tests","code":""},{"path":"/news/index.html","id":"lucidus-215","dir":"Changelog","previous_headings":"","what":"LUCIDus 2.1.5","title":"LUCIDus 2.1.5","text":"CRAN release: 2022-03-28","code":""},{"path":"/news/index.html","id":"new-features-2-1-5","dir":"Changelog","previous_headings":"","what":"New features","title":"LUCIDus 2.1.5","text":"Add progress bar boot.lucid function track many iterations done. Add verbose parameter est.lucid disable automatic output R console.","code":""},{"path":"/news/index.html","id":"other-changes-2-1-5","dir":"Changelog","previous_headings":"","what":"Other changes","title":"LUCIDus 2.1.5","text":"Fix bug boot.lucid Fix bug predict_lucid","code":""},{"path":"/news/index.html","id":"lucidus-214","dir":"Changelog","previous_headings":"","what":"LUCIDus 2.1.4","title":"LUCIDus 2.1.4","text":"CRAN release: 2022-03-02","code":""},{"path":"/news/index.html","id":"new-features-2-1-4","dir":"Changelog","previous_headings":"","what":"New features","title":"LUCIDus 2.1.4","text":"est.lucid enhanced : Deal missing values omics data, inclduing sporadict missing pattern list-wise missing pattern. Integrated imputation missing values. Different approaches initialization EM algorithm, including mclust guess uniform distribution. New function lucid, wrapper function perform model selection grid K penalty terms. plot.lucid: new option change color nodes lines boot.lucid: return original output boot::boot allow user plot diagnostic figures.","code":""},{"path":"/news/index.html","id":"other-changes-2-1-4","dir":"Changelog","previous_headings":"","what":"Other changes","title":"LUCIDus 2.1.4","text":"Use log-sum-exponential trick update likelihood function avoid /overflow Major bug fixes boot.lucid function Update simulated dataset Update corresponding examples documentation.","code":""},{"path":"/news/index.html","id":"lucidus-210","dir":"Changelog","previous_headings":"","what":"LUCIDus 2.1.0","title":"LUCIDus 2.1.0","text":"CRAN release: 2020-07-22","code":""},{"path":"/news/index.html","id":"new-features-2-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"LUCIDus 2.1.0","text":"new variable selection framework applied LUCID. * lasso type penalty applied mean biomarkers * glasso method applied variance-covariance structure achieve sparsity covariance matrix * apply new variable selection criteria, takes mean coviarnce matrix biomarkers account.","code":""},{"path":"/news/index.html","id":"other-changes-2-1-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"LUCIDus 2.1.0","text":"Fix bugs pred.lucid(). Now can predict latent cluster outcome.","code":""},{"path":"/news/index.html","id":"lucidus-200","dir":"Changelog","previous_headings":"","what":"LUCIDus 2.0.0","title":"LUCIDus 2.0.0","text":"CRAN release: 2020-05-18 feature update whole package. rewrite codes make model fitting procedure much faster (10 50 times) v1.0.0. Also, grammar LUCID changed user-friendly version. (Please note, version backward compatible)","code":""},{"path":"/news/index.html","id":"new-features-2-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"LUCIDus 2.0.0","text":"est.lucid(): previously called est_lucid. Fit LUCID mode much faster; use mclust initialize produce stable estimate model; fix bugs dealing missing values biomarker data. summary.lucid(): previously called summary_lucid. S3 method function can directly called summary; provide nice table detailed interpretation model; add option calculate 95% CI based result returned boot.lucid(). plot.lucid(): previously called plot_lucid. S3 method function can directly called plot; change color palette. predict.lucid(): previously called pred_lucid. S3 method function can directly called predict. boot.lucid(): previously called boot_lucid. Provide neat output.","code":""},{"path":"/news/index.html","id":"other-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"LUCIDus 2.0.0","text":"Update vignette. Updated citation getting published Bioinformatics; Minor bug fixes.","code":""}]
